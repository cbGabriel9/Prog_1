A Ciência da Computação é a única que é exclusiva para ajudar outras áreas;

IDE: Integrated Development Environment;
ASP: Active Server Pages;

-- RAZOR / BLAZOR --

ORM: Object Relation Mapping;

Aplicação WEB: 
- Opera em uma arquitetura Client / Server, sendo o cliente a máquina que está entrando na aplicação e o Server vai ser uma máquina que vai estar rodando a aplicação;

DNS: Domain Name System;
HTTP / HTTPS: Hyper Text Transfer Protocol (Secure);
HTML: HyperText Markup Language;

Hyper text pode ser: imagem, texto e etc que está vinculado a um tipo de recurso;

-----------------------VISUAL STUDIO-----------------------

Ctrl + Alt + L : Abrir gerenciador de soluções
Shift + Alt + Enter: Tela cheia

-----------------------------------------------------------
------------------------POWER SHELL------------------------

git remote -v: Ver os repositórios remotos
git remote add origin link: Puxar o repositório remoto para local

-----------------------------------------------------------
MCV: Model View Controller - Arquitetura (Foi o tipo de projeto que criamos com o .NET);
-> Model: Especifica os dados que compõem o modelo do APP;
-> View: A UI (User Interface);
-> Controller: Responde aos comandos da aplicação;

var: variável do tipo implícito, onde não determina o tipo da variável. Ele pode se tornar tipo inteiro, string, uma função, um objeto ou algo mais complexo.
 
Lembrar de colocar o @model no index css para mostrar o tipo dos dados que vão ser recebido na web

Atividade 1: Com base no exemplo feito em laboratório, com os tipos inteiros nas variáveis totalCount e userCount que foram exibidos em tela no Home/Index, contidos na classe Variáveis faça:
Na página 47 do livro é possível acessar os valores mínimos e máximos para os demais tipos númericos. Edite a classe Variáveis, crie novos atributos a ela e armazena os valores Min e Max de cada tipo numérico para em seguida exibir em tela no Home/Index

------------------------Aplicações WEB------------------------

Protocolo: Forma de comunicação de dados;

Todas as aplicações WEB utilizam o protocolo HTTP e algumas o HTTPS (HTTPS é uma versão segura do HTTP, e ele utiliza o HTTP como base). HTTP é stateless e segue o padrão "requisição-resposta". Foram desenvolvidos pelo IETF e o W3C. A versão atual é HTTP/2 e foi padronizada em 2015, sendo suportado pela maioria dos navegadores. Sendo binário, totalmente multiplexado, cabeçalho comprimido para reduzir pacotes.

Web app: É um sistema dinâmico, possui interatividade com o usuário, utiliza banco de dados.

Website: Página estática, exibe imagem, texto, vídeo. Não tem interação com o banco de dados, não possui dinamicidade.

Encriptação Simétrica: Método convencional para garantir integridade dos dados transferidos. Faz uso de uma única chave secreta "Symmetric Key" para criptografar e descriptografar a mensagem, onde apenas o remetente e o destinatário possuem esta chave.

Encriptação Assimétrica: Utiliza duas chaves: Pública e privada. A pública codifica e a privada descodifica.

Request-Responde: Baseado em Cliente-Server. Servidor é um computador que recebe requisições de um cliente e os serve. Tipicamente um computador parrduo com memória e processdor suficiente para atender a demandas dos clientes (usuários).

Stateless: Não armazena aos estados servidas e recebidas anteriormente, não possui um histórico.

Cliente pode ser um navegador, servidor pode ser seu computador.

Um bom exemplo é o front end (Cliente) e back end (Servidor).

Verbos HTTP:

- GET: Buscar recursos, acessar cache;
- POST: Criar um novo recurso;
- PUT/PATCH: Atualizar um recurso existente;
- DELETE: Remover um recurso.

Atividade 2: Pegar o algoritmo de Cesar e criptografar a mensagem.

Aspas simples: Para caracteres
Aspas duplas: String

Alt + Shift + . = Seleciona as mesmas palavras uma por uma pra baixo

Não pode usar interpolação nas declarações de variáveis, então precisa utilizar no método construtor

Atividade 3: Crie um novo projeto ASP.NET Core Web MVC para fazer a leitura de uma entrada de dados numérica e ser capaz de devolver à tela do usuário o número informado escrito por extenso. Lembre-se de verificar se trata-se de uma unidade, dezena, centa e milhar.

View > Controller > Model (Sendo model o centro da arquitetura MVC)

GUI: Guide User Interface
UI: User Interface
UX: User Experience

Debuggar:

Escolher ponto de parada;
Clicar F10 para ele ir executando próxima linha;
Clicar F5 para ir até o fim do código.

Conteúdos da prova: if, for, switch, vetor, matriz, visual studio, dotnet, c#, http, post, get, put, delete, conceitos.